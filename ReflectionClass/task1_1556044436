// Написать универсальный класс-репозиторий, обладающий следующими функциями:

function __construct($host, $database, $user, $password);

function get($entityType); -- возвращает всё записи указаного типа
	
function find($entityType, $id);   -- ищет и возвращает запись по идентификатору

function insert($object); -- добавляет новую запись, возвращает её же, с уже присвоенным идентификатором

function update($object); -- обновляет запись ($object должен содержать идентификатор обновляемой записи и новые значения полей), возвращает true или false

function delete($entityType, $id); -- удаляет из базы запись с указанным идентификатором, возвращает true или false




При вызове конструктора, создается объект PDO, через который и происходит работа с базой.


Метод get определяет имя таблицы на основании полученного имени класса и пытается достать данные из этой таблицы.
В случае успеха - возвращает массив объектов указанного типа. В ином случае - возвращает пустой массив.


Метод find определяет имя таблицы таким же образом и пытается достать запись с указанным идентификатором.
В случае успеха - возвращает найденный объект. В ином случае - возвращает null.


Метод insert определяет имя таблицы на основании имени типа полученного объекта.
Составляет INSERT запрос для всех полей объекта, полученного при помощи рефлексии.

	
Метод update определяет имя таблица на основании имени типа полученного объекта.
Составляет UPDATE запрос для всех полей объекта, полученного при помощи рефлексии.


Метод delete определяет имя таблицы таким же образом и пытается достать запись с укзанным идентификатором


Если на момент вызова метода insert - база отсутствует - нужно ее создать на основании полей и названия класса переданного объекта.


Проверить на двух разных классах модели

не laravel, суть задания в написании класса Repository